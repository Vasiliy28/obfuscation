"use strict";

/**
 * функция возвращает объект с методом generate().
 * С каждым новым вызовом метода generate() вызывается функция generateNewName() и добовляет 
 * counter +1,в generateNewName() передаётся количество вызовов generate() (counter) ,которое берётся из замыкания.
 * Метод Reset() , обнуляет счетчик , и имена генерируются заново.
 * @param allowUpperCaseLetters
 * @returns {{generate: generate, reset: reset}}
 */
module.exports = function(allowUpperCaseLetters) {
    
    var temp_result = [],
        new_name = '',
        letters = 'abcdefghijklmnopqrstuvwxyz',
        numerals = '1234567890',
        symbols = '-_',
        chars_default = letters.toLowerCase() + symbols + numerals ,
        chars = allowUpperCaseLetters ? chars_default + letters.toUpperCase() : chars_default ,
        counter = 0;
    
    function generateNewName(value) {
        if (value < chars.length) {
            if (chars.charAt(value).match(/[a-z]/) === null) {
                counter += 1;
                temp_result = [];
                return generateNewName(counter);
            }
            temp_result.push(chars.charAt(value));
            new_name = temp_result.reverse().join('');
        } else {
            temp_result.push(chars.charAt(value % chars.length));
            return generateNewName(Math.floor((value / chars.length) - 1));
        }
    }
    
    return {
        generate: function () {
            generateNewName(counter);
            temp_result = [];
            counter++;
            return new_name;
        },
        reset: function () {
            counter = 0;
        }
    };
    
};
